user  nginx;
worker_processes  auto;

error_log  /dev/stderr;
pid        /var/run/nginx.pid;

# Used to zap Server header
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections  1024;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;

    #sendfile       on;
    #tcp_nopush     on;

    keepalive_timeout  {{ .Env.KEEPALIVE_TIMEOUT }};
    #gzip  on;

    # Don't leak information about this server.
    server_tokens off;

    # Disable etag
    etag off;

    # Nuke some headers we don't want leaking out
    more_clear_headers "X-Powered-By";
    more_clear_headers "X-Rack-Cache";
    more_clear_headers "X-Runtime";

    # Nuke 'Server' header which is aggresively set on noncommercial nginx distributions
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens
    # https://github.com/openresty/headers-more-nginx-module
    more_clear_headers "Server";
    more_clear_headers "server";

    include /etc/nginx/includes/log-format.conf;

    # "5XX" filter for logging
    map $status $is5xx {
        ~^[5] 1;
        default 0;
    }

    {{ if (eq .Env.LOG_ONLY_5XX "1") }}
    access_log /dev/stdout json_analytics if=$is5xx;
    {{ else }}
    # For docker logs to work, we need to output to stdout/stderr
    access_log /dev/stdout json_analytics;
    {{ end }}

    include /etc/nginx/conf.d/*.conf;
}
